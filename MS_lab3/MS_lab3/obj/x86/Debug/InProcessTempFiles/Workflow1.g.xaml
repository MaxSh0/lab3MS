<?xml version="1.0" encoding="utf-8"?>
<m:Workflow1 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:m="clr-namespace:MS_lab3;assembly=MS_lab3" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>MS_lab3</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>MS_lab3</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <m:Workflow1.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID0" DisplayName="Water">
          <State.Entry>
            <Sequence>
              <WriteLine>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">"Жидкая вода \nВыберите действие: \n1-испарить \n2-заморозить";</mca:CSharpValue>
                </InArgument>
              </WriteLine>
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String">num</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine();</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </State.Entry>
          <State.Transitions>
            <Transition DisplayName="Vaporization">
              <Transition.To>
                <State x:Name="__ReferenceID1" DisplayName="Vapor">
                  <State.Entry>
                    <Sequence>
                      <WriteLine>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">"Пар \nВыберите действие: \n1-ионизировать \n2-заморозить \n3-собрать конденсат";</mca:CSharpValue>
                        </InArgument>
                      </WriteLine>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String">num</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine();</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </State.Entry>
                  <State.Transitions>
                    <Transition DisplayName="Condensation" To="{x:Reference __ReferenceID0}">
                      <Transition.Action>
                        <WriteLine>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Произошел процесс конденсации, пар превратился в воду\n"</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">num == "3"</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                    <Transition DisplayName="Deposition">
                      <Transition.To>
                        <State x:Name="__ReferenceID2" DisplayName="Ice/Frost">
                          <State.Entry>
                            <Sequence>
                              <WriteLine>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"Лед \nВыберите действие: \n1-нагреть";</mca:CSharpValue>
                                </InArgument>
                              </WriteLine>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String">num</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine();</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </State.Entry>
                          <State.Transitions>
                            <Transition DisplayName="Sublimation" To="{x:Reference __ReferenceID1}" />
                            <Transition DisplayName="Melting" To="{x:Reference __ReferenceID0}">
                              <Transition.Action>
                                <WriteLine>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">"Разморозили лед\n";</mca:CSharpValue>
                                  </InArgument>
                                </WriteLine>
                              </Transition.Action>
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">num == "1"</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                      <Transition.Action>
                        <WriteLine>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Пар охладился и превратился в иней\n"</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">num == "2";</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                    <Transition DisplayName="ionization">
                      <Transition.To>
                        <State x:Name="__ReferenceID3" DisplayName="Plazma">
                          <State.Entry>
                            <Sequence>
                              <WriteLine>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">"Плазма \nВыберите действие: \n1-деионизация";</mca:CSharpValue>
                                </InArgument>
                              </WriteLine>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String">num</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine();</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </State.Entry>
                          <State.Transitions>
                            <Transition DisplayName="deionization" To="{x:Reference __ReferenceID1}">
                              <Transition.Action>
                                <WriteLine>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">"Деионизация пара\n";</mca:CSharpValue>
                                  </InArgument>
                                </WriteLine>
                              </Transition.Action>
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">num == "1";</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                      <Transition.Action>
                        <WriteLine>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"Ионизация пара\n";</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">num == "1";</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
              <Transition.Action>
                <WriteLine>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">"Вода превратилась в пар\n";</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">num == "1";</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
            <Transition DisplayName="Freezing" To="{x:Reference __ReferenceID2}">
              <Transition.Action>
                <WriteLine>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">"Заморозили воду до перехода в твердое агрегатное состояние\n";</mca:CSharpValue>
                  </InArgument>
                </WriteLine>
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">num == "2"</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
          </State.Transitions>
          <State.Variables>
            <Variable x:TypeArguments="x:String" Name="variable1" />
            <Variable x:TypeArguments="x:String" Name="variable2" />
          </State.Variables>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:String" Name="num">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>dz5DOlxVc2Vyc1xtc2hha18wMDBcc291cmNlXHJlcG9zXE1TX2xhYjNcTVNfbGFiM1xXb3JrZmxvdzEueGFtbDMtA4YCEgIBAYECC4ECOgIBfS8H+AEPAgFSSA/YARcCAS5tF5cBHwIBGKYBF8oBHwIBAjELQxYCAWviAQ/iAVkCAWXbAQ/fARsCAV/vAQ/vAVgCAVrnAQ/sARsCAVRKE1weAgFGaBdoYAIBQmEXZSMCAT6hARehAWECATuaAReeASMCATfUARfUAWECATTNARfRASMCATBvG4QBJgIBIpIBH5IBaAIBHooBH48BKwIBGqgBG7oBJgIBDMYBH8YBaQIBCL8BH8MBKwIBBDINNhkCAXc3DUIWAgFs3QET3QFtAgFg6QET6QGQAQIBVUsVTyECAU5QFVseAgFHYxtjkgECAT+cARucAX8CATjPARvPAWwCATFwHXUpAgEqdh2CASYCASOMASOMAXUCARupAR2tASkCARSuAR25ASYCAQ3BASPBAXYCAQU0ETSOAQIBeD8TP2QCAXI6EzpcAgFtTRlNqAECAU9YG1hsAgFLUxtTZAIBSHIhcoYBAgErfiN+dAIBJ3kjeWwCASSrASGrAY0BAgEVtgEjtgF0AgERsQEjsQFsAgEO</sads:DebugSymbol.Symbol>
    </StateMachine>
  </m:Workflow1.Implementation>
</m:Workflow1>